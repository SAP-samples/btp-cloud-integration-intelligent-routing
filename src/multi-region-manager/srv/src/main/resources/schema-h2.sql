
DROP VIEW IF EXISTS BatchService_OverallPerformance;
DROP VIEW IF EXISTS BatchService_HanaDeletePerformance;
DROP VIEW IF EXISTS BatchService_HanaCreatePerformance;
DROP VIEW IF EXISTS BatchService_Performance;
DROP VIEW IF EXISTS BatchService_PerformanceAnalytics;
DROP VIEW IF EXISTS BatchService_BatchJobExecutionEx;
DROP VIEW IF EXISTS BatchService_BatchStepExecutionContext;
DROP VIEW IF EXISTS BatchService_BatchStepExecution;
DROP VIEW IF EXISTS BatchService_BatchJobExecutionContext;
DROP VIEW IF EXISTS BatchService_BatchJobInstance;
DROP VIEW IF EXISTS BatchService_BatchJobExecution;
DROP TABLE IF EXISTS BATCH_JOB_EXECUTION_NOTES;
DROP TABLE IF EXISTS BATCH_JOB_EXECUTION_CONTEXT;
DROP TABLE IF EXISTS BATCH_STEP_EXECUTION_CONTEXT;
DROP TABLE IF EXISTS BATCH_STEP_EXECUTION;
DROP TABLE IF EXISTS BATCH_JOB_EXECUTION_PARAMS;
DROP TABLE IF EXISTS BATCH_JOB_EXECUTION;
DROP TABLE IF EXISTS BATCH_JOB_INSTANCE;
DROP table if exists cds_Model;

CREATE TABLE BATCH_JOB_INSTANCE (
  JOB_INSTANCE_ID BIGINT NOT NULL,
  VERSION BIGINT,
  JOB_NAME NVARCHAR(100) NOT NULL,
  JOB_KEY NVARCHAR(32) NOT NULL,
  PRIMARY KEY(JOB_INSTANCE_ID)
); 

CREATE TABLE BATCH_JOB_EXECUTION (
  JOB_EXECUTION_ID BIGINT NOT NULL,
  VERSION BIGINT,
  JOB_INSTANCE_ID BIGINT NOT NULL,
  CREATE_TIME TIMESTAMP(7) NOT NULL,
  START_TIME TIMESTAMP(7) NULL,
  END_TIME TIMESTAMP(7),
  STATUS NVARCHAR(10),
  EXIT_CODE NVARCHAR(2500),
  EXIT_MESSAGE NVARCHAR(2500),
  LAST_UPDATED TIMESTAMP(7),
  PRIMARY KEY(JOB_EXECUTION_ID)
); 

CREATE TABLE BATCH_JOB_EXECUTION_PARAMS (
  JOB_EXECUTION_ID BIGINT NOT NULL,
  PARAMETER_NAME NVARCHAR(100) NOT NULL,
  PARAMETER_TYPE NVARCHAR(100) NOT NULL,
  PARAMETER_VALUE NVARCHAR(2500),
  IDENTIFYING NVARCHAR(1) NOT NULL
); 

CREATE TABLE BATCH_STEP_EXECUTION (
  STEP_EXECUTION_ID BIGINT NOT NULL,
  VERSION BIGINT NOT NULL,
  STEP_NAME NVARCHAR(100) NOT NULL,
  JOB_EXECUTION_ID BIGINT NOT NULL,
  CREATE_TIME TIMESTAMP(7) NOT NULL,
  START_TIME TIMESTAMP(7) NULL,
  END_TIME TIMESTAMP(7) NULL,
  STATUS NVARCHAR(10),
  COMMIT_COUNT BIGINT,
  READ_COUNT BIGINT,
  FILTER_COUNT BIGINT,
  WRITE_COUNT BIGINT,
  READ_SKIP_COUNT BIGINT,
  WRITE_SKIP_COUNT BIGINT,
  PROCESS_SKIP_COUNT BIGINT,
  ROLLBACK_COUNT BIGINT,
  EXIT_CODE NVARCHAR(2500),
  EXIT_MESSAGE NVARCHAR(2500),
  LAST_UPDATED TIMESTAMP(7),
  PRIMARY KEY(STEP_EXECUTION_ID)
); 

CREATE TABLE BATCH_STEP_EXECUTION_CONTEXT (
  STEP_EXECUTION_ID BIGINT NOT NULL,
  SHORT_CONTEXT NVARCHAR(2500) NOT NULL,
  SERIALIZED_CONTEXT NCLOB,
  PRIMARY KEY(STEP_EXECUTION_ID)
); 

CREATE TABLE BATCH_JOB_EXECUTION_CONTEXT (
  JOB_EXECUTION_ID BIGINT NOT NULL,
  SHORT_CONTEXT NVARCHAR(2500) NOT NULL,
  SERIALIZED_CONTEXT NCLOB,
  PRIMARY KEY(JOB_EXECUTION_ID)
); 

CREATE TABLE BATCH_JOB_EXECUTION_NOTES (
  JOB_EXECUTION_ID BIGINT NOT NULL,
  JOB_EXECUTION_TYPE NVARCHAR(50) NOT NULL,
  PERFORMANCE_TRACE BOOLEAN DEFAULT FALSE,
  PERFORMANCE_TRACE_REGION NVARCHAR(100) NULL,
  JOB_EXECUTION_DESC NVARCHAR(100) NULL,
  PRIMARY KEY(JOB_EXECUTION_ID)
); 

CREATE SEQUENCE BATCH_STEP_EXECUTION_SEQ;
CREATE SEQUENCE BATCH_JOB_EXECUTION_SEQ;
CREATE SEQUENCE BATCH_JOB_SEQ;

CREATE VIEW BatchService_BatchJobExecution AS SELECT
  JOB_EXECUTION_0.JOB_EXECUTION_ID,
  JOB_EXECUTION_0.VERSION,
  JOB_EXECUTION_0.JOB_INSTANCE_ID,
  JOB_EXECUTION_0.CREATE_TIME,
  JOB_EXECUTION_0.START_TIME,
  JOB_EXECUTION_0.END_TIME,
  JOB_EXECUTION_0.STATUS,
  JOB_EXECUTION_0.EXIT_CODE,
  JOB_EXECUTION_0.EXIT_MESSAGE,
  JOB_EXECUTION_0.LAST_UPDATED
FROM BATCH_JOB_EXECUTION AS JOB_EXECUTION_0; 

CREATE VIEW BatchService_BatchJobInstance AS SELECT
  JOB_INSTANCE_0.JOB_INSTANCE_ID,
  JOB_INSTANCE_0.VERSION,
  JOB_INSTANCE_0.JOB_NAME,
  JOB_INSTANCE_0.JOB_KEY
FROM BATCH_JOB_INSTANCE AS JOB_INSTANCE_0; 

CREATE VIEW BatchService_BatchJobExecutionContext AS SELECT
  JOB_EXECUTION_CONTEXT_0.JOB_EXECUTION_ID,
  JOB_EXECUTION_CONTEXT_0.SHORT_CONTEXT,
  JOB_EXECUTION_CONTEXT_0.SERIALIZED_CONTEXT
FROM BATCH_JOB_EXECUTION_CONTEXT AS JOB_EXECUTION_CONTEXT_0; 

CREATE VIEW BatchService_BatchStepExecution AS SELECT
  STEP_EXECUTION_0.STEP_EXECUTION_ID,
  STEP_EXECUTION_0.VERSION,
  STEP_EXECUTION_0.STEP_NAME,
  STEP_EXECUTION_0.JOB_EXECUTION_ID,
  STEP_EXECUTION_0.CREATE_TIME,
  STEP_EXECUTION_0.START_TIME,
  STEP_EXECUTION_0.END_TIME,
  STEP_EXECUTION_0.STATUS,
  STEP_EXECUTION_0.COMMIT_COUNT,
  STEP_EXECUTION_0.READ_COUNT,
  STEP_EXECUTION_0.FILTER_COUNT,
  STEP_EXECUTION_0.WRITE_COUNT,
  STEP_EXECUTION_0.READ_SKIP_COUNT,
  STEP_EXECUTION_0.WRITE_SKIP_COUNT,
  STEP_EXECUTION_0.PROCESS_SKIP_COUNT,
  STEP_EXECUTION_0.ROLLBACK_COUNT,
  STEP_EXECUTION_0.EXIT_CODE,
  STEP_EXECUTION_0.EXIT_MESSAGE,
  STEP_EXECUTION_0.LAST_UPDATED
FROM BATCH_STEP_EXECUTION AS STEP_EXECUTION_0; 

CREATE VIEW BatchService_BatchStepExecutionContext AS SELECT
  STEP_EXECUTION_CONTEXT_0.STEP_EXECUTION_ID,
  STEP_EXECUTION_CONTEXT_0.SHORT_CONTEXT,
  STEP_EXECUTION_CONTEXT_0.SERIALIZED_CONTEXT
FROM BATCH_STEP_EXECUTION_CONTEXT AS STEP_EXECUTION_CONTEXT_0; 

CREATE VIEW BatchService_BatchJobExecutionEx AS SELECT
  je_0.JOB_EXECUTION_ID,
  je_0.VERSION,
  je_0.JOB_INSTANCE_ID,
  je_0.CREATE_TIME,
  je_0.START_TIME,
  je_0.END_TIME,
  je_0.STATUS,
  je_0.EXIT_CODE,
  je_0.EXIT_MESSAGE,
  je_0.LAST_UPDATED,
  jn_1.JOB_EXECUTION_DESC
FROM (BatchService_BatchJobExecution AS je_0 INNER JOIN BATCH_JOB_EXECUTION_NOTES AS jn_1 ON je_0.JOB_EXECUTION_ID = jn_1.JOB_EXECUTION_ID); 
